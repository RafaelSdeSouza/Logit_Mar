scale_x_continuous(breaks=c(2, 5, 6, 9),
labels = c("YARD", "STEPS", "DOOR", "INSIDE"))+labs(x="", y="")+
theme_xkcd()
p
setwd("~/Dropbox/artigos/Meusartigos/IAA-WGC/Github/Logit_Mar")
# Libraries
library(arm)
library(caret)
library(pROC)
require(plyr)
require(gam)
library(glmnet)
data<-read.csv("sample_agn.csv",header=TRUE,na.strings="")
data2<-na.omit(data)
data2<-data2[data2$logMstar>0,]
data2<-data2[which(data2$vlos_sigma!=Inf),]
#data2$bpt<-as.factor(data2$bpt)
data2$bpt <- revalue(data2$bpt,c("SF"="0","Composite"="0",
"LINER"="1","Seyfert/LINER"="1",
"Seyfert"="1","BLANK"="0"))
# Scale variables
data2$logMstar<-(data2$logMstar-mean(data2$logMstar))/sd(data2$logMstar)
data2$logMhalo<-(data2$logMhalo-mean(data2$logMhalo))/sd(data2$logMhalo)
data2$vlos_sigma<-(data2$vlos_sigma-mean(data2$vlos_sigma))/sd(data2$vlos_sigma)
data2$r_rvir<-(data2$r_rvir-mean(data2$r_rvir))/sd(data2$r_rvir)
# Variable selection via LASSO
x<-as.matrix(data2[,2:5])
fit<-glmnet(x,y=data2$bpt,alpha=1,family="binomial")
predict(fit, type="coefficients")
plot(fit,xvar="lambda",label = TRUE)
plot(fit, xvar = "dev", label = TRUE)
cv.glmmod <- cv.glmnet(x,y=data2$bpt,alpha=1,family="binomial",type.measure = "class")
plot(cv.glmmod)
best_lambda <- cv.glmmod$lambda.min
coef.min = coef(cv.glmmod, s = "lambda.min")
active.min = coef.min[which(coef.min != 0)]
index.min = coef.min[active.min]
active.min
coef.min
cv.glmmod <- cv.glmnet(x,y=data2$bpt,alpha=1,family="binomial",type.measure = "auc")
plot(cv.glmmod)
best_lambda <- cv.glmmod$lambda.min
coef.min = coef(cv.glmmod, s = "lambda.min")
coef.min
active.min = coef.min[which(abs(coef.min) > 0.05 )]
active.min
fit2=gam(Y~te(QHI,baryon_fraction),data=data.2,family=binomial("logit"))
fit2=gam(Y~te(QHI,baryon_fraction),data=data2,family=binomial("logit"))
fit2=gam(bpt~te(logMstar,r_rvir),data=data2,family=binomial("logit"))
library(arm)
library(caret)
library(pROC)
require(plyr)
require(gam)
library(glmnet)
gam(bpt~te(logMstar,r_rvir),data=data2,family=binomial("logit"))
require(mgcv)
fit2=gam(bpt~te(logMstar,r_rvir),data=data2,family=binomial("logit"))
vis.gam(fit2,type="response",plot.type = "persp",color="topo", border=NA, n.grid=500,theta=-60,phi=30)
vis.gam(fit2,type="response",plot.type = "persp",color="topo", border=NA, n.grid=500,theta=60,phi=30)
vis.gam(fit2,type="response",plot.type = "persp",color="topo", border=NA, n.grid=500,theta=30,phi=30)
predict(fit2)
x <-range(data2$logMstar)
x <- seq(0.5*x[1], 1.5*x[2], length.out=50)
y <- range(data2$r_rvir)
y <- seq(0.5*y[1], 1.5*y[2], length.out=50)
z <- outer(x,y,
function(logMstar,r_rvir)
predict(fit, data.frame(logMstar,r_rvir),type = 'response'))
library(rsm)
library(lattice)
YlOrBr <- c("#FFFFD4", "#FED98E", "#FE9929", "#D95F0E", "#993404")
x <-range(data2$logMstar)
x <- seq(0.5*x[1], 1.5*x[2], length.out=50)
y <- range(data2$r_rvir)
y <- seq(0.5*y[1], 1.5*y[2], length.out=50)
z <- outer(x,y,
function(logMstar,r_rvir)
predict(fit2, data.frame(logMstar,r_rvir),type = 'response'))
library(rsm)
library(lattice)
YlOrBr <- c("#FFFFD4", "#FED98E", "#FE9929", "#D95F0E", "#993404")
#p<-persp(x,y,z, theta=150, phi=20,
#         expand = 0.5,shade = 0.1,
#         xlab="Z", ylab=expression(NII.Ha), zlab=expression(log10.EW.Ha),ticktype='detailed',
#         col = YlOrBr,border=NA,xlog=T,ylog=T)
cor = cm.colors(100)
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =cor,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log[Mstar]),cex=1.25), ylab=list(label=expression(V[sigma]),cex=1.25),
zlab=list(rot=90,label=expression(pi),cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
range(data2$logMstar)
range(data2$r_rvir)
x <-range(data2$logMstar)
x <- seq(1.5*x[1], 1.5*x[2], length.out=50)
y <- range(data2$r_rvir)
y <- seq(1.5*y[1], 1.5*y[2], length.out=50)
z <- outer(x,y,
function(logMstar,r_rvir)
predict(fit2, data.frame(logMstar,r_rvir),type = 'response'))
library(rsm)
library(lattice)
YlOrBr <- c("#FFFFD4", "#FED98E", "#FE9929", "#D95F0E", "#993404")
#p<-persp(x,y,z, theta=150, phi=20,
#         expand = 0.5,shade = 0.1,
#         xlab="Z", ylab=expression(NII.Ha), zlab=expression(log10.EW.Ha),ticktype='detailed',
#         col = YlOrBr,border=NA,xlog=T,ylog=T)
cor = cm.colors(100)
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =cor,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log[Mstar]),cex=1.25), ylab=list(label=expression(V[sigma]),cex=1.25),
zlab=list(rot=90,label=expression(pi),cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
YlOrBr <- c("#00526D", "#00A3DB", "#7A2713", "#939598", "#6CCFF6")
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =YlOrBr,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log[Mstar]),cex=1.25), ylab=list(label=expression(V[sigma]),cex=1.25),
zlab=list(rot=90,label=expression(pi),cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
fit=glm(bpt~logMstar+r_rvir,data=data2,family=binomial("logit"))
x <-range(data2$logMstar)
x <- seq(1.5*x[1], 1.5*x[2], length.out=50)
y <- range(data2$r_rvir)
y <- seq(1.5*y[1], 1.5*y[2], length.out=50)
z <- outer(x,y,
function(logMstar,r_rvir)
predict(fit2, data.frame(logMstar,r_rvir),type = 'response'))
library(rsm)
library(lattice)
YlOrBr <- c("#00526D", "#00A3DB", "#7A2713", "#939598", "#6CCFF6")
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =YlOrBr,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log[Mstar]),cex=1.25), ylab=list(label=expression(V[sigma]),cex=1.25),
zlab=list(rot=90,label=expression(pi),cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
z <- outer(x,y,
function(logMstar,r_rvir)
predict(fit1, data.frame(logMstar,r_rvir),type = 'response'))
library(rsm)
library(lattice)
YlOrBr <- c("#00526D", "#00A3DB", "#7A2713", "#939598", "#6CCFF6")
z <- outer(x,y,
function(logMstar,r_rvir)
predict(fit, data.frame(logMstar,r_rvir),type = 'response'))
library(rsm)
library(lattice)
YlOrBr <- c("#00526D", "#00A3DB", "#7A2713", "#939598", "#6CCFF6")
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =YlOrBr,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log[Mstar]),cex=1.25), ylab=list(label=expression(V[sigma]),cex=1.25),
zlab=list(rot=90,label=expression(pi),cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
x <-range(data2$logMstar)
x <- seq(1.75*x[1], 1.75*x[2], length.out=50)
y <- range(data2$r_rvir)
y <- seq(1.75*y[1], 1.75*y[2], length.out=50)
z <- outer(x,y,
function(logMstar,r_rvir)
predict(fit, data.frame(logMstar,r_rvir),type = 'response'))
library(rsm)
library(lattice)
YlOrBr <- c("#00526D", "#00A3DB", "#7A2713", "#939598", "#6CCFF6")
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =YlOrBr,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log[Mstar]),cex=1.25), ylab=list(label=expression(V[sigma]),cex=1.25),
zlab=list(rot=90,label=expression(pi),cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
x <-range(data2$logMstar)
x <- seq(1.25*x[1], 2*x[2], length.out=50)
y <- range(data2$r_rvir)
y <- seq(1.25*y[1], 2*y[2], length.out=50)
z <- outer(x,y,
function(logMstar,r_rvir)
predict(fit, data.frame(logMstar,r_rvir),type = 'response'))
library(rsm)
library(lattice)
YlOrBr <- c("#00526D", "#00A3DB", "#7A2713", "#939598", "#6CCFF6")
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =YlOrBr,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log[Mstar]),cex=1.25), ylab=list(label=expression(V[sigma]),cex=1.25),
zlab=list(rot=90,label=expression(pi),cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
x <-range(data2$logMstar)
x <- seq(1.2*x[1], 2.5*x[2], length.out=50)
y <- range(data2$r_rvir)
y <- seq(1.2*y[1], 2.5*y[2], length.out=50)
z <- outer(x,y,
function(logMstar,r_rvir)
predict(fit, data.frame(logMstar,r_rvir),type = 'response'))
library(rsm)
library(lattice)
YlOrBr <- c("#00526D", "#00A3DB", "#7A2713", "#939598", "#6CCFF6")
YlOrBr <- c("#00526D")
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =YlOrBr,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log[Mstar]),cex=1.25), ylab=list(label=expression(V[sigma]),cex=1.25),
zlab=list(rot=90,label=expression(pi),cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
YlOrBr <- c("#00A3DB")
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =YlOrBr,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log[Mstar]),cex=1.25), ylab=list(label=expression(V[sigma]),cex=1.25),
zlab=list(rot=90,label=expression(pi),cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
x <-range(data2$logMstar)
x <- seq(1.2*x[1], 2.75*x[2], length.out=50)
y <- range(data2$r_rvir)
y <- seq(1.2*y[1], 2.75*y[2], length.out=50)
z <- outer(x,y,
function(logMstar,r_rvir)
predict(fit, data.frame(logMstar,r_rvir),type = 'response'))
library(rsm)
library(lattice)
YlOrBr <- c("#00A3DB")
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =YlOrBr,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log[Mstar]),cex=1.25), ylab=list(label=expression(r[vir]),cex=1.25),
zlab=list(rot=90,label=expression(pi),cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
x <-range(data2$logMstar)
x <- seq(1.2*x[1], 3*x[2], length.out=50)
y <- range(data2$r_rvir)
y <- seq(1.2*y[1], 3*y[2], length.out=50)
z <- outer(x,y,
function(logMstar,r_rvir)
predict(fit, data.frame(logMstar,r_rvir),type = 'response'))
library(rsm)
library(lattice)
YlOrBr <- c("#00A3DB")
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =YlOrBr,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log[Mstar]),cex=1.25), ylab=list(label=expression(r[vir]),cex=1.25),
zlab=list(rot=90,label=expression(pi),cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =YlOrBr,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log[Mstar]),cex=1.25), ylab=list(label=expression(R[vir]),cex=1.25),
zlab=list(rot=90,label=expression(pi),cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =YlOrBr,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log~M[star]),cex=1.25), ylab=list(label=expression(R[vir]),cex=1.25),
zlab=list(rot=90,label=expression(pi),cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =YlOrBr,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log~M[star]),cex=1.25), ylab=list(label=expression(R[vir]),cex=1.25),
zlab=list(rot=90,label="p",cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =YlOrBr,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log~M[star]),cex=1.25), ylab=list(label=expression(R[vir]),cex=1.25),
zlab=list(rot=90,label="Probability of AGN",cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =YlOrBr,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log~M[star]),cex=1.25), ylab=list(label=expression(R[vir]),cex=1.25),
zlab=list(rot=90,label="p[AGN]",cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =YlOrBr,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log~M[star]),cex=1.25), ylab=list(label=expression(R[vir]),cex=1.25),
zlab=list(rot=90,label=expression(p[AGN]),cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =YlOrBr,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log~M[star]),cex=1.25), ylab=list(label=expression(R[vir]),cex=1.25),
zlab=list(rot=90,label=expression(P(AGN)),cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
cairo_pdf("logit3D.pdf")
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =YlOrBr,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log~M[star]),cex=1.25), ylab=list(label=expression(R[vir]),cex=1.25),
zlab=list(rot=90,label=expression(P~(AGN)),cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
dev.off()
cairo_pdf("logit3D.pdf")
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =YlOrBr,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log~M[star]),cex=1.25), ylab=list(label=expression(R[vir]),cex=1.25),
zlab=list(rot=90,label=expression(P[AGN]),cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
dev.off()
data<-read.csv("sample_agn.csv",header=TRUE,na.strings="")
data2<-na.omit(data)
data2<-data2[data2$logMstar>0,]
data2<-data2[which(data2$vlos_sigma!=Inf),]
#data2$bpt<-as.factor(data2$bpt)
data2$bpt <- revalue(data2$bpt,c("SF"="0","Composite"="0",
"LINER"="1","Seyfert/LINER"="1",
"Seyfert"="1","BLANK"="0"))
dat_or<-data2
# Scale variables
data2$logMstar<-(data2$logMstar-mean(data2$logMstar))/sd(data2$logMstar)
data2$logMhalo<-(data2$logMhalo-mean(data2$logMhalo))/sd(data2$logMhalo)
data2$vlos_sigma<-(data2$vlos_sigma-mean(data2$vlos_sigma))/sd(data2$vlos_sigma)
data2$r_rvir<-(data2$r_rvir-mean(data2$r_rvir))/sd(data2$r_rvir)
# Variable selection via LASSO
x<-as.matrix(data2[,2:5])
fit<-glmnet(x,y=data2$bpt,alpha=1,family="binomial")
predict(fit, type="coefficients")
plot(fit,xvar="lambda",label = TRUE)
plot(fit, xvar = "dev", label = TRUE)
# Cross-validation
cv.glmmod <- cv.glmnet(x,y=data2$bpt,alpha=1,family="binomial",type.measure = "auc")
plot(cv.glmmod)
best_lambda <- cv.glmmod$lambda.min
coef.min = coef(cv.glmmod, s = "lambda.min")
active.min = coef.min[which(abs(coef.min) > 0.05 )]
fit=glm(bpt~logMstar+r_rvir,data=data2,family=binomial("logit"))
data2$bpt <- revalue(data2$bpt,c("SF"="0","Composite"="0",
"LINER"="1","Seyfert/LINER"="1",
"Seyfert"="1","BLANK"="0"))
# Scale variables
#data2$logMstar<-(data2$logMstar-mean(data2$logMstar))/sd(data2$logMstar)
#data2$logMhalo<-(data2$logMhalo-mean(data2$logMhalo))/sd(data2$logMhalo)
#data2$vlos_sigma<-(data2$vlos_sigma-mean(data2$vlos_sigma))/sd(data2$vlos_sigma)
#data2$r_rvir<-(data2$r_rvir-mean(data2$r_rvir))/sd(data2$r_rvir)
# Variable selection via LASSO
x<-as.matrix(data2[,2:5])
fit<-glmnet(x,y=data2$bpt,alpha=1,family="binomial")
predict(fit, type="coefficients")
plot(fit,xvar="lambda",label = TRUE)
plot(fit, xvar = "dev", label = TRUE)
# Cross-validation
cv.glmmod <- cv.glmnet(x,y=data2$bpt,alpha=1,family="binomial",type.measure = "auc")
plot(cv.glmmod)
best_lambda <- cv.glmmod$lambda.min
coef.min = coef(cv.glmmod, s = "lambda.min")
active.min = coef.min[which(abs(coef.min) > 0.05 )]
# Plot
x <-range(data2$logMstar)
x <- seq(1.2*x[1], 3*x[2], length.out=50)
y <- range(data2$r_rvir)
y <- seq(1.2*y[1], 3*y[2], length.out=50)
z <- outer(x,y,
function(logMstar,r_rvir)
predict(fit, data.frame(logMstar,r_rvir),type = 'response'))
library(rsm)
library(lattice)
YlOrBr <- c("#00A3DB")
fit
fit=glm(bpt~logMstar+r_rvir,data=data2,family=binomial("logit"))
x <-range(data2$logMstar)
x <- seq(1.2*x[1], 3*x[2], length.out=50)
y <- range(data2$r_rvir)
y <- seq(1.2*y[1], 3*y[2], length.out=50)
z <- outer(x,y,
function(logMstar,r_rvir)
predict(fit, data.frame(logMstar,r_rvir),type = 'response'))
library(rsm)
library(lattice)
YlOrBr <- c("#00A3DB")
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =YlOrBr,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log~M[star]),cex=1.25), ylab=list(label=expression(R[vir]),cex=1.25),
zlab=list(rot=90,label=expression(P[AGN]),cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
data2
data2[1,]
range(data2$logMstar)
data<-read.csv("sample_agn.csv",header=TRUE,na.strings="")
data2<-na.omit(data)
data2<-data2[data2$logMstar>0,]
data2<-data2[which(data2$vlos_sigma!=Inf),]
#data2$bpt<-as.factor(data2$bpt)
data2$bpt <- revalue(data2$bpt,c("SF"="0","Composite"="0",
"LINER"="1","Seyfert/LINER"="1",
"Seyfert"="1","BLANK"="0"))
fit=glm(bpt~logMstar+r_rvir,data=data2,family=binomial("logit"))
x <-range(data2$logMstar)
x <- seq(1.2*x[1], 3*x[2], length.out=50)
y <- range(data2$r_rvir)
y <- seq(1.2*y[1], 3*y[2], length.out=50)
z <- outer(x,y,
function(logMstar,r_rvir)
predict(fit, data.frame(logMstar,r_rvir),type = 'response'))
library(rsm)
library(lattice)
YlOrBr <- c("#00A3DB")
#p<-persp(x,y,z, theta=150, phi=20,
#         expand = 0.5,shade = 0.1,
#         xlab="Z", ylab=expression(NII.Ha), zlab=expression(log10.EW.Ha),ticktype='detailed',
#         col = YlOrBr,border=NA,xlog=T,ylog=T)
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =YlOrBr,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log~M[star]),cex=1.25), ylab=list(label=expression(R[vir]),cex=1.25),
zlab=list(rot=90,label=expression(P[AGN]),cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
range(data2$logMstar)
range(data2$r_rvir)
x <-range(data2$logMstar)
x <- seq(0.95*x[1], 1.25*x[2], length.out=50)
y <- range(data2$r_rvir)
y <- seq(y[1], 1.25*y[2], length.out=50)
z <- outer(x,y,
function(logMstar,r_rvir)
predict(fit, data.frame(logMstar,r_rvir),type = 'response'))
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =YlOrBr,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log~M[star]),cex=1.25), ylab=list(label=expression(R[vir]),cex=1.25),
zlab=list(rot=90,label=expression(P[AGN]),cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =YlOrBr,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log~M[star]/M['\u0298']),cex=1.25), ylab=list(label=expression(R[vir]/R['\u0298']),cex=1.25),
zlab=list(rot=90,label=expression(P[AGN]),cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
cairo_pdf("logit3D.pdf")
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =YlOrBr,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log~M[star]/M['\u0298']),cex=1.25), ylab=list(label=expression(R[vir]/R['\u0298']),cex=1.25),
zlab=list(rot=90,label=expression(P[AGN]),cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
dev.off()
x<-as.matrix(data2[,2:5])
fit<-glmnet(x,y=data2$bpt,alpha=1,family="binomial")
predict(fit, type="coefficients")
plot(fit,xvar="lambda",label = TRUE)
plot(fit, xvar = "dev", label = TRUE)
# Cross-validation
cv.glmmod <- cv.glmnet(x,y=data2$bpt,alpha=1,family="binomial",type.measure = "auc")
plot(cv.glmmod)
best_lambda <- cv.glmmod$lambda.min
coef.min = coef(cv.glmmod, s = "lambda.min")
active.min = coef.min[which(abs(coef.min) > 0.05 )]
cairo_pdf("logit3D.pdf")
trellis.par.set("axis.line",list(axis.text=list(cex=20),col=NA,lty=1,lwd=2))
par(mar=c(1,1,1,1))
wireframe(z~x+y,data=data.frame(x=x, y=rep(y, each=length(x)), z=z),
par.settings = list(regions=list(alpha=0.6)),
col.regions =YlOrBr,drape=T,light.source = c(5,5,5),colorkey = FALSE,
xlab=list(label=expression(log~M[star]/M['\u0298']),cex=1.25), ylab=list(label=expression(R[vir](R['\u0298'])),cex=1.25),
zlab=list(rot=90,label=expression(P[AGN]),cex=1.25,dist=-1,rot=0),
scale=list(tck=0.75,arrows=FALSE,distance =c(0.75, 0.75, 0.75)))
dev.off()
